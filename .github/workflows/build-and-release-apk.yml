name: Build Android APK and Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # Pin to the project's Flutter SDK version to avoid resolution errors in CI.
          flutter-version: '3.35.7'

      - name: Ensure Android SDK packages
        run: |
          set -eux
          # locate sdkmanager
          if [ -x "${ANDROID_SDK_ROOT:-$ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager" ]; then
            sdkmanager="${ANDROID_SDK_ROOT:-$ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager"
          elif [ -x "${ANDROID_SDK_ROOT:-$ANDROID_HOME}/tools/bin/sdkmanager" ]; then
            sdkmanager="${ANDROID_SDK_ROOT:-$ANDROID_HOME}/tools/bin/sdkmanager"
          else
            echo "sdkmanager not found in ANDROID_SDK_ROOT or ANDROID_HOME"
            exit 1
          fi
          # install required packages (android-33 is commonly required; adjust if needed)
          yes | "$sdkmanager" "platform-tools" "platforms;android-33" "build-tools;33.0.2"
          yes | "$sdkmanager" --licenses || true

      - name: Install dependencies
        run: flutter pub get

      - name: Build release APK
        run: flutter build apk --release

      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Automatically built APK from commit ${{ github.sha }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
